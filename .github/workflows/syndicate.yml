name: "Syndication"

on:
  workflow_dispatch:
    branches:
      - master
  schedule:
    - cron: '0 14,18,22 * * *'

jobs:
  syndicate:
    name: "Post Jobs"
    runs-on: ubuntu-latest

    steps:
    - name: "Check out repository"
      uses: actions/checkout@v3

    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - run: bundle install

    - name: Get Cached Jobs DB
      id: get-cache-jobsdb
      uses: actions/cache@v3
      with:
        path: ./jobs.sqlite
        key: jobs-cache

    - run: bundle exec ruby main.rb
      env:
        SYN_ENV: production
        TD_SLACK_WEBHOOK: ${{ secrets.TD_SLACK_WEBHOOK }}
        TW_TDJOBS_APIKEY: ${{ secrets.TW_TDJOBS_APIKEY }}
        TW_TDJOBS_APISECRET: ${{ secrets.TW_TDJOBS_APISECRET }}
        TW_TDJOBS_APIBEARER: ${{ secrets.TW_TDJOBS_APIBEARER }}
        TW_TDJOBS_ACTOKEN: ${{ secrets.TW_TDJOBS_ACTOKEN }}
        TW_TDJOBS_ACSECRET: ${{ secrets.TW_TDJOBS_ACSECRET }}
        TW_TDJOBS_CLIENTID: ${{ secrets.TW_TDJOBS_CLIENTID }}
        TW_TDJOBS_CLIENTSECRET: ${{ secrets.TW_TDJOBS_CLIENTSECRET }}

    - name: Clear Jobs DB Cache
      uses: actions/github-script@v6
      with:
        script: |
          console.log("Clearing Jobs Cache")

          const cache_list = await github.rest.actions.getActionsCacheList({
            owner: context.repo.owner,
            repo: context.repo.repo
          })

          if(typeof cache_list.data.actions_caches === undefined)
            return;

          for (const cache of cache_list.data.actions_caches) {
            if(cache.key !== "jobs-cache")
              continue

            github.rest.actions.deleteActionsCacheByKey({
              owner: context.repo.owner,
              repo: context.repo.repo,
              key: cache.key
            })
            console.log("Cleared Previous Jobs Cache")
          }


    - name: Save Jobs DB
      uses: actions/cache/save@v3
      id: save-cache-jobsdb
      with:
        path: ./jobs.sqlite
        key: jobs-cache
